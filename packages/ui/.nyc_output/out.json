{
  "/Users/ahmed.araby/learning/react/monorepo/callsign-react/packages/ui/src/Provider/Accordion/ExpandContext.tsx": {
    "path": "/Users/ahmed.araby/learning/react/monorepo/callsign-react/packages/ui/src/Provider/Accordion/ExpandContext.tsx",
    "statementMap": {
      "0": {
        "start": {
          "line": 2,
          "column": 22
        },
        "end": {
          "line": 2,
          "column": 47
        }
      },
      "1": {
        "start": {
          "line": 3,
          "column": 18
        },
        "end": {
          "line": 9,
          "column": 1
        }
      },
      "2": {
        "start": {
          "line": 4,
          "column": 24
        },
        "end": {
          "line": 4,
          "column": 55
        }
      },
      "3": {
        "start": {
          "line": 5,
          "column": 2
        },
        "end": {
          "line": 7,
          "column": 3
        }
      },
      "4": {
        "start": {
          "line": 6,
          "column": 4
        },
        "end": {
          "line": 6,
          "column": 74
        }
      },
      "5": {
        "start": {
          "line": 8,
          "column": 2
        },
        "end": {
          "line": 8,
          "column": 23
        }
      },
      "6": {
        "start": {
          "line": 10,
          "column": 23
        },
        "end": {
          "line": 21,
          "column": 1
        }
      },
      "7": {
        "start": {
          "line": 14,
          "column": 34
        },
        "end": {
          "line": 14,
          "column": 63
        }
      },
      "8": {
        "start": {
          "line": 15,
          "column": 23
        },
        "end": {
          "line": 17,
          "column": 16
        }
      },
      "9": {
        "start": {
          "line": 16,
          "column": 4
        },
        "end": {
          "line": 16,
          "column": 27
        }
      },
      "10": {
        "start": {
          "line": 18,
          "column": 2
        },
        "end": {
          "line": 20,
          "column": 15
        }
      }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": {
          "start": {
            "line": 3,
            "column": 18
          },
          "end": {
            "line": 3,
            "column": 19
          }
        },
        "loc": {
          "start": {
            "line": 3,
            "column": 24
          },
          "end": {
            "line": 9,
            "column": 1
          }
        },
        "line": 3
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": {
          "start": {
            "line": 10,
            "column": 23
          },
          "end": {
            "line": 10,
            "column": 24
          }
        },
        "loc": {
          "start": {
            "line": 13,
            "column": 6
          },
          "end": {
            "line": 21,
            "column": 1
          }
        },
        "line": 13
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": {
          "start": {
            "line": 15,
            "column": 41
          },
          "end": {
            "line": 15,
            "column": 42
          }
        },
        "loc": {
          "start": {
            "line": 15,
            "column": 47
          },
          "end": {
            "line": 17,
            "column": 3
          }
        },
        "line": 15
      }
    },
    "branchMap": {
      "0": {
        "loc": {
          "start": {
            "line": 5,
            "column": 2
          },
          "end": {
            "line": 7,
            "column": 3
          }
        },
        "type": "if",
        "locations": [
          {
            "start": {
              "line": 5,
              "column": 2
            },
            "end": {
              "line": 7,
              "column": 3
            }
          },
          {
            "start": {
              "line": 5,
              "column": 2
            },
            "end": {
              "line": 7,
              "column": 3
            }
          }
        ],
        "line": 5
      },
      "1": {
        "loc": {
          "start": {
            "line": 12,
            "column": 2
          },
          "end": {
            "line": 12,
            "column": 23
          }
        },
        "type": "default-arg",
        "locations": [
          {
            "start": {
              "line": 12,
              "column": 18
            },
            "end": {
              "line": 12,
              "column": 23
            }
          }
        ],
        "line": 12
      }
    },
    "s": {
      "0": 2,
      "1": 2,
      "2": 4,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 2,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    "f": {
      "0": 4,
      "1": 0,
      "2": 0
    },
    "b": {
      "0": [0, 0],
      "1": [0]
    },
    "inputSourceMap": {
      "version": 3,
      "sources": [
        "/Users/ahmed.araby/learning/react/monorepo/callsign-react/packages/ui/src/Provider/Accordion/ExpandContext.tsx"
      ],
      "sourcesContent": [
        "import * as React from 'react';\n\nexport type ExpandContextArgs = { isExpand: boolean; toggleExpand: () => void };\n\nconst ExpandContext = React.createContext<ExpandContextArgs | null>(null);\n\nconst useExpand = (): ExpandContextArgs => {\n  const expandContext = React.useContext(ExpandContext);\n\n  if (expandContext === undefined) {\n    throw new Error('useExpand must be used within a <ExpandProvider />');\n  }\n  return expandContext as ExpandContextArgs;\n};\n\ntype ExpandProviderProps = {\n  children: React.ReactNode;\n  defaultExpand?: boolean;\n};\n\nconst ExpandProvider: React.VFC<ExpandProviderProps> = ({\n  children,\n  defaultExpand = false,\n}) => {\n  const [isExpand, setIsExpand] = React.useState(defaultExpand);\n\n  const toggleExpand = React.useCallback(() => {\n    setIsExpand(!isExpand);\n  }, [isExpand]);\n\n  return (\n    <ExpandContext.Provider value={{ isExpand, toggleExpand }}>\n      {children}\n    </ExpandContext.Provider>\n  );\n};\n\nexport { useExpand, ExpandProvider };\n"
      ],
      "mappings": "AAAA;AAIA,MAAM,gBAAgB,MAAM,cAAwC;AAEpE,MAAM,YAAY,MAAyB;AACzC,QAAM,gBAAgB,MAAM,WAAW;AAEvC,MAAI,kBAAkB,QAAW;AAC/B,UAAM,IAAI,MAAM;AAAA;AAElB,SAAO;AAAA;AAQT,MAAM,iBAAiD,CAAC;AAAA,EACtD;AAAA,EACA,gBAAgB;AAAA,MACZ;AACJ,QAAM,CAAC,UAAU,eAAe,MAAM,SAAS;AAE/C,QAAM,eAAe,MAAM,YAAY,MAAM;AAC3C,gBAAY,CAAC;AAAA,KACZ,CAAC;AAEJ,SACE,oCAAC,cAAc,UAAf;AAAA,IAAwB,OAAO,EAAE,UAAU;AAAA,KACxC;AAAA;AAKP;",
      "names": []
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "5b823a41dfa018e3e5ece25589d957b94ff7e7be"
  },
  "/Users/ahmed.araby/learning/react/monorepo/callsign-react/packages/ui/src/components/Accordion/AccordionSummary/AccordionSummary.styled.tsx": {
    "path": "/Users/ahmed.araby/learning/react/monorepo/callsign-react/packages/ui/src/components/Accordion/AccordionSummary/AccordionSummary.styled.tsx",
    "statementMap": {
      "0": {
        "start": {
          "line": 2,
          "column": 18
        },
        "end": {
          "line": 12,
          "column": 2
        }
      },
      "1": {
        "start": {
          "line": 13,
          "column": 20
        },
        "end": {
          "line": 15,
          "column": 3
        }
      },
      "2": {
        "start": {
          "line": 13,
          "column": 51
        },
        "end": {
          "line": 15,
          "column": 1
        }
      }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": {
          "start": {
            "line": 13,
            "column": 32
          },
          "end": {
            "line": 13,
            "column": 33
          }
        },
        "loc": {
          "start": {
            "line": 13,
            "column": 51
          },
          "end": {
            "line": 15,
            "column": 1
          }
        },
        "line": 13
      }
    },
    "branchMap": {
      "0": {
        "loc": {
          "start": {
            "line": 14,
            "column": 13
          },
          "end": {
            "line": 14,
            "column": 57
          }
        },
        "type": "cond-expr",
        "locations": [
          {
            "start": {
              "line": 14,
              "column": 24
            },
            "end": {
              "line": 14,
              "column": 40
            }
          },
          {
            "start": {
              "line": 14,
              "column": 43
            },
            "end": {
              "line": 14,
              "column": 57
            }
          }
        ],
        "line": 14
      }
    },
    "s": {
      "0": 2,
      "1": 2,
      "2": 0
    },
    "f": {
      "0": 0
    },
    "b": {
      "0": [0, 0]
    },
    "inputSourceMap": {
      "version": 3,
      "sources": [
        "/Users/ahmed.araby/learning/react/monorepo/callsign-react/packages/ui/src/components/Accordion/AccordionSummary/AccordionSummary.styled.tsx"
      ],
      "sourcesContent": [
        "import styled from '@emotion/styled';\n\nconst Container = styled.button({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  padding: '0px 16px',\n  minHeight: '48px',\n  border: 'none',\n  background: 'transparent',\n  width: '100%',\n  zIndex: 2,\n});\n\ntype IconWrapperProps = {\n  isExpand: boolean;\n};\n\nconst IconWrapper = styled.span<IconWrapperProps>(({ isExpand }) => ({\n  transform: isExpand ? 'rotate(180deg)' : 'rotate(0deg)',\n}));\n\nexport { Container, IconWrapper };\n"
      ],
      "mappings": "AAAA;AAEA,MAAM,YAAY,OAAO,OAAO;AAAA,EAC9B,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,SAAS;AAAA,EACT,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ,OAAO;AAAA,EACP,QAAQ;AAAA;AAOV,MAAM,cAAc,OAAO,KAAuB,CAAC,EAAE,eAAgB;AAAA,EACnE,WAAW,WAAW,mBAAmB;AAAA;AAG3C;",
      "names": []
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "6f2c41c68d3663933769a35949f7c6923b1bbc28"
  },
  "/Users/ahmed.araby/learning/react/monorepo/callsign-react/packages/ui/src/components/Accordion/AccordionSummary/AccordionSummary.tsx": {
    "path": "/Users/ahmed.araby/learning/react/monorepo/callsign-react/packages/ui/src/components/Accordion/AccordionSummary/AccordionSummary.tsx",
    "statementMap": {
      "0": {
        "start": {
          "line": 5,
          "column": 32
        },
        "end": {
          "line": 24,
          "column": 1
        }
      },
      "1": {
        "start": {
          "line": 12,
          "column": 37
        },
        "end": {
          "line": 12,
          "column": 48
        }
      },
      "2": {
        "start": {
          "line": 13,
          "column": 2
        },
        "end": {
          "line": 23,
          "column": 90
        }
      },
      "3": {
        "start": {
          "line": 18,
          "column": 6
        },
        "end": {
          "line": 18,
          "column": 21
        }
      },
      "4": {
        "start": {
          "line": 19,
          "column": 6
        },
        "end": {
          "line": 19,
          "column": 21
        }
      }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": {
          "start": {
            "line": 5,
            "column": 32
          },
          "end": {
            "line": 5,
            "column": 33
          }
        },
        "loc": {
          "start": {
            "line": 11,
            "column": 6
          },
          "end": {
            "line": 24,
            "column": 1
          }
        },
        "line": 11
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": {
          "start": {
            "line": 17,
            "column": 13
          },
          "end": {
            "line": 17,
            "column": 14
          }
        },
        "loc": {
          "start": {
            "line": 17,
            "column": 20
          },
          "end": {
            "line": 20,
            "column": 5
          }
        },
        "line": 17
      }
    },
    "branchMap": {
      "0": {
        "loc": {
          "start": {
            "line": 23,
            "column": 5
          },
          "end": {
            "line": 23,
            "column": 87
          }
        },
        "type": "cond-expr",
        "locations": [
          {
            "start": {
              "line": 23,
              "column": 18
            },
            "end": {
              "line": 23,
              "column": 28
            }
          },
          {
            "start": {
              "line": 23,
              "column": 47
            },
            "end": {
              "line": 23,
              "column": 87
            }
          }
        ],
        "line": 23
      }
    },
    "s": {
      "0": 2,
      "1": 4,
      "2": 0,
      "3": 0,
      "4": 0
    },
    "f": {
      "0": 4,
      "1": 0
    },
    "b": {
      "0": [0, 0]
    },
    "inputSourceMap": {
      "version": 3,
      "sources": [
        "/Users/ahmed.araby/learning/react/monorepo/callsign-react/packages/ui/src/components/Accordion/AccordionSummary/AccordionSummary.tsx"
      ],
      "sourcesContent": [
        "import * as React from 'react';\nimport { FaChevronDown } from 'react-icons/fa';\nimport {\n  BaseProps,\n  TagProps,\n  AccessibilityProps,\n} from '../../../types/BaseProps';\nimport { useExpand } from '../../../Provider/Accordion/ExpandContext';\nimport * as S from './AccordionSummary.styled';\n\ntype AccordionSummaryProps = BaseProps &\n  TagProps &\n  Pick<AccessibilityProps, 'aria-label' | 'aria-controls'> & {\n    children: React.ReactNode;\n    expandIcon?: React.ReactNode;\n  };\n\nexport const AccordionSummary: React.VFC<AccordionSummaryProps> = ({\n  children,\n  id,\n  style,\n  className,\n  expandIcon,\n}) => {\n  const { isExpand, toggleExpand } = useExpand();\n\n  return (\n    <S.Container\n      id={id}\n      style={style}\n      className={className}\n      onClick={(e) => {\n        console.log(e);\n        toggleExpand();\n      }}\n    >\n      {children}\n      <S.IconWrapper isExpand={isExpand}>\n        {expandIcon ? expandIcon : <FaChevronDown />}\n      </S.IconWrapper>\n    </S.Container>\n  );\n};\n"
      ],
      "mappings": "AAAA;AACA;AAMA;AACA;AASO,aAAM,mBAAqD,CAAC;AAAA,EACjE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,MACI;AACJ,QAAM,EAAE,UAAU,iBAAiB;AAEnC,SACE,oCAAC,EAAE,WAAH;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA,SAAS,CAAC,MAAM;AACd,cAAQ,IAAI;AACZ;AAAA;AAAA,KAGD,UACD,oCAAC,EAAE,aAAH;AAAA,IAAe;AAAA,KACZ,aAAa,aAAa,oCAAC,eAAD;AAAA;",
      "names": []
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "b1c6cce35606cd8132317f6d717b1a4f862561a9"
  }
}
